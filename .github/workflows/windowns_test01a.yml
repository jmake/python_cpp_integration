name: MSBuild

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-2019

    steps:

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: cmake ?
      run: |
        C:\ProgramData\Chocolatey\bin\vswhere.exe -products * -requires Component.Linux.CMake -property installationPath -latest
        cmake --version 
        
    - name: clexe 
      run: |
        C:\ProgramData\Chocolatey\bin\vswhere.exe -products * -requires Microsoft.VisualStudio.Component.VC.14.25.x86.x64 -property installationPath -latest
        
        ls "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"
        
        cl.exe 

    - name: Enviromental 
      shell: powershell 
      run: | 
        cmake --version 
        ls 
        ls C:\Miniconda 
        
        ##
        ## https://docs.microsoft.com/en-us/cpp/build/building-on-the-command-line?view=msvc-170
        ## 
        msbuild.exe 
        
        ## https://code.visualstudio.com/docs/cpp/config-msvc#_run-vs-code-outside-the-developer-command-prompt
        #ls C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/Tools/
        
        ls %programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\ 
        
        #cl.exe
        
      
    - uses: actions/checkout@v3


